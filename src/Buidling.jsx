/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 original.glb --transform
Files: original.glb [7.65MB] > original-transformed.glb [2.31MB] (70%)
*/
import { Stats, OrbitControls, useGLTF } from "@react-three/drei";
import { useRef, useEffect } from "react";

import * as THREE from 'three'



export function Building({ controls, areas }) {
	const { scene } = useGLTF("/all-transformed.glb");

	const modelRef = useRef();

	useEffect(() => {
		if (modelRef.current) {
			const bbox = new THREE.Box3().setFromObject(modelRef.current);
			const dimensions = new THREE.Vector3();
			bbox.getSize(dimensions);

			console.log('Model Dimensions (x, y, z):', dimensions.x, dimensions.y, dimensions.z);
		}
	}, []);

	return (
		<primitive
			object={scene.children[0]}
			castShadow
			receiveShadow
			material-envMapIntensity={0.4}
			ref={modelRef}
		/>
	);
}
