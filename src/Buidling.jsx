/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 original.glb --transform
Files: original.glb [7.65MB] > original-transformed.glb [2.31MB] (70%)
*/
import { Stats, OrbitControls, useGLTF } from "@react-three/drei";
import React, { useRef, useEffect } from "react";

import * as THREE from 'three'



export function Building({ controls, areas, props }) {
	//const { scene } = useGLTF("/all-transformed.glb");

	const { nodes, materials } = useGLTF('/all_edited-transformed.glb')


	const modelRef = useRef();

	useEffect(() => {
		if (modelRef.current) {
			const bbox = new THREE.Box3().setFromObject(modelRef.current);
			const dimensions = new THREE.Vector3();
			bbox.getSize(dimensions);

			console.log('Model Dimensions (x, y, z):', dimensions.x, dimensions.y, dimensions.z);
		}
	}, []);

	// return (
	// 	<primitive
	// 		object={scene.children[0]}
	// 		castShadow
	// 		receiveShadow
	// 		material-envMapIntensity={0.4}
	// 		ref={modelRef}
	// 	/>
	// );

	return (
		<group {...props} dispose={null}>
			<mesh geometry={nodes.Tile_1.geometry} material={materials.Material_0} position={[0.283, 5.274, 1.352]} ref={modelRef}/>
		</group>
	)
}

useGLTF.preload('/all_edited-transformed.glb')

//      <mesh geometry={nodes.Tile_1.geometry} material={materials.Material_0} position={[0.283, 5.274, 1.352]} />
//      <mesh geometry={nodes.Tile_1.geometry} material={materials.Material_0} position={[4.04, 75.31272, 19.30656]} />

//x : 4.04
//y : 75.31272
//z : 19.30656

//tile1
//x: 17.2948 m   / 14.27   = 1.211969166082691
//y : 8.52379 m /  14.27   = 0.5973
//z : 4.27581 m / 14.27   =  0.2996

//setLootAt
//position
// x: 3 , y : 2 , z:3
